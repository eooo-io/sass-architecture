name: CD

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]

    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build and push API Gateway
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: ${{ matrix.platform }}
        push: true
        tags: |
          eooo/api-gateway:latest
          eooo/api-gateway:${{ steps.version.outputs.VERSION }}
        file: Dockerfile.backend

    - name: Build and push Frontend
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: ${{ matrix.platform }}
        push: true
        tags: |
          eooo/frontend:latest
          eooo/frontend:${{ steps.version.outputs.VERSION }}
        file: Dockerfile.frontend

    - name: Deploy to staging
      if: startsWith(github.ref, 'refs/tags/v0')
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      run: |
        echo "$KUBE_CONFIG" > kubeconfig
        export KUBECONFIG=kubeconfig
        helm upgrade --install api-gateway ./helm-charts/api-gateway \
          --namespace staging \
          --set image.tag=${{ steps.version.outputs.VERSION }}

    - name: Deploy to production
      if: startsWith(github.ref, 'refs/tags/v1')
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      run: |
        echo "$KUBE_CONFIG" > kubeconfig
        export KUBECONFIG=kubeconfig
        helm upgrade --install api-gateway ./helm-charts/api-gateway \
          --namespace production \
          --set image.tag=${{ steps.version.outputs.VERSION }}
