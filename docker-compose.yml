version: "3.8"

services:
  # Frontend
  frontend:
    build:
      context: ./site/frontend
      dockerfile: ../../Dockerfile.frontend
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
    volumes:
      - ./site/frontend:/app
      - /app/node_modules

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: ../../Dockerfile.backend
    ports:
      - "4000:3000"
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - redis
      - nats
      - kafka
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules

  # Documentation
  docs:
    image: squidfunk/mkdocs-material:latest
    command: mkdocs serve --dev-addr=0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - ./:/docs

  # Authentication (Keycloak)
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - DB_VENDOR=postgres
      - DB_ADDR=postgres
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  # Database
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis (for caching and pub/sub)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  # NATS (for async messaging)
  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - "2181:2181"

  # Observability Stack
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel-collector:/etc/
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "8888:8888" # metrics
    depends_on:
      - prometheus

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
